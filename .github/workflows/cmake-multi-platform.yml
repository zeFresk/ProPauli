name: Build and tests (MacOS + Linux)

on:
  # Triggers the workflow on push events but only for the "main" branch
  push:
    branches: [ "main" ]
  # Triggers the workflow on pull request events for the "main" branch
  pull_request:
    branches: [ "main" ]

permissions:
  checks: write
  pull-requests: write

jobs:
  build_and_test:
    name: "Build and test"
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    env:
      CC: clang
      CXX: clang++

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (Ubuntu)
        if: runner.os == 'Linux'
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: clang cmake
          version: 1.0

      - name: Install latest Clang (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install llvm cmake
          echo "$(brew --prefix llvm)/bin" >> $GITHUB_PATH


      - name: Debug
        run: |
          cmake --version
          clang++ --version

      - name: Configure CMake
        run: >
          cmake -S . -B build
          -D CMAKE_BUILD_TYPE=Debug
          -D SANITIZE=ON
          -D TEST=ON

      - name: Build project
        run: cmake --build build --config Debug

      - name: Run CTest and Generate Report
        working-directory: ./build
        run: ctest -C Debug --verbose --output-on-failure --output-junit Test.xml || true

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: runner.os == 'Linux' 
        with:
          files: build/Test.xml


  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    needs: build_and_test
    env:
      CC: clang
      CXX: clang++

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: clang cmake llvm
          version: 1.0

      - name: Configure CMake for Coverage
        run: >
          cmake -S . -B build
          -D CMAKE_BUILD_TYPE=Debug
          -D COVERAGE=ON 
          -D TEST=ON

      - name: Build project
        run: cmake --build build --config Debug

      - name: Run tests to generate coverage data
        working-directory: ./build
        run: make coverage

      - name: Generate Coverage Report
        working-directory: ./build
        run: |          
          llvm-profdata merge -sparse *.profraw -o default.profdata
          llvm-cov export -format=lcov UnitTest -instr-profile=default.profdata -sources ../include -sources ../src > coverage.info

      - name: Upload to Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./build/coverage.info

  benchmark:
    name: Run Google C++ Benchmark Framework example
    runs-on: ubuntu-latest
    needs: build_and_test
    env:
      CC: clang
      CXX: clang++
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (Ubuntu)
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: clang cmake
          version: 1.0      

      - name: Configure CMake
        run: >
          cmake -S . -B build
          -D CMAKE_BUILD_TYPE=Release
          -D SANITIZE=OFF
          -D TEST=OFF
          -D BENCHMARK=ON

      - name: Build project
        run: cmake --build build --config Release
      
      - name: Run benchmark 
        run: ./build/Benchmarks --benchmark_format=json | tee benchmark_result.json

      - name: Store benchmark result
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: C++ Benchmark
          tool: 'googlecpp'
          output-file-path: benchmark_result.json
          github-token: ${{ secrets.GITHUB_TOKEN }}
          # Show alert with commit comment on detecting possible performance regression
          alert-threshold: '200%'
          comment-on-alert: true
          fail-on-alert: true
          alert-comment-cc-users: '@zefresk'
